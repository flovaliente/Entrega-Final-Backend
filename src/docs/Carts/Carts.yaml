openapi: 3.0.0
info:
  title: Cart API
  version: 1.0.0
  description: API for managing shopping carts.

servers:
  - url: http://localhost:8080

paths:
  /api/carts:
    post:
      summary: Create a new cart
      description: Create a new shopping cart.
      responses:
        200:
          description: Cart created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  payload:
                    $ref: '#/components/schemas/Cart'
        400:
          description: Failed to create cart
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string

    get:
      summary: Get all carts
      description: Retrieve a list of all shopping carts.
      responses:
        200:
          description: A list of carts
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  payload:
                    type: array
                    items:
                      $ref: '#/components/schemas/Cart'
        404:
          description: No carts found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string

  /api/carts/{cid}:
    get:
      summary: Get a cart by ID
      description: Retrieve all products in a specific cart by its ID.
      parameters:
        - name: cid
          in: path
          required: true
          description: The ID of the cart
          schema:
            type: string
      responses:
        200:
          description: Cart found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        500:
          description: Failed to retrieve cart
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string

    delete:
      summary: Delete a cart by ID
      description: Delete a specific cart using its ID.
      parameters:
        - name: cid
          in: path
          required: true
          description: The ID of the cart
          schema:
            type: string
      responses:
        200:
          description: Cart deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
        404:
          description: Cart not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string

  /api/carts/{cid}/products/{pid}:
    put:
      summary: Update product quantity in a cart
      description: Update the quantity of a product in a cart.
      parameters:
        - name: cid
          in: path
          required: true
          description: The ID of the cart
          schema:
            type: string
        - name: pid
          in: path
          required: true
          description: The ID of the product
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: integer
                  description: The new quantity of the product in the cart
                  example: 3
      responses:
        200:
          description: Quantity updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
        400:
          description: Failed to update quantity
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
    post:
      summary: Add a product to a cart
      description: Add a product to a specific cart.
      parameters:
        - name: cid
          in: path
          required: true
          description: The ID of the cart
          schema:
            type: string
        - name: pid
          in: path
          required: true
          description: The ID of the product
          schema:
            type: string
      responses:
        200:
          description: Product added to cart successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Product successfully added to cart.
        403:
          description: Permission denied
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: You cannot add your own product to cart.
        400:
          description: Failed to add product to cart
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string

    delete:
      summary: Delete a product from a cart
      description: Remove a product from a specific cart.
      parameters:
        - name: cid
          in: path
          required: true
          description: The ID of the cart
          schema:
            type: string
        - name: pid
          in: path
          required: true
          description: The ID of the product
          schema:
            type: string
      responses:
        200:
          description: Product deleted from cart successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
        400:
          description: Failed to delete product from cart
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string

  /api/carts/{cid}/purchase:
    post:
      summary: Purchase items in a cart
      description: Complete the purchase of items in a cart.
      parameters:
        - name: cid
          in: path
          required: true
          description: The ID of the cart
          schema:
            type: string
      responses:
        200:
          description: Purchase successfull
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  payload:
                    type: object
                    properties:
                      ticket:
                        $ref: '#/components/schemas/Ticket'
                      notProcessedProd:
                        type: array
                        items:
                          $ref: '#/components/schemas/Product'
        400:
          description: Failed to complete purchase
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                  example: Error trying to purchase cart.

components:
  schemas:
    Cart:
      type: object
      properties:
        id:
          type: string
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductInCart'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    ProductInCart:
      type: object
      properties:
        productId:
          type: string
          description: The ID of the product
          items:
            $ref: '#/components/schemas/Product'
        quantity:
          type: integer
          description: The quantity of the product in the cart
          example: 2